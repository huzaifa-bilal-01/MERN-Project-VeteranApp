{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern\\\\mern\\\\client\\\\src\\\\component\\\\Posts\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Post from \"./Post/Post\";\nimport useStyles from './styles';\nimport { Grid } from \"@material-ui/core\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = _ref => {\n  _s();\n  let {\n    setCurrentId\n  } = _ref;\n  const {\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const classes = useStyles();\n  if (!posts.length && !isLoading) return 'No posts';\n  return isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n    className: classes.circular\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 21\n  }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.container,\n    container: true,\n    alignItems: \"stretch\",\n    spacing: 3,\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 6,\n      lg: 3,\n      children: /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        setCurrentId: setCurrentId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }, this)\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this);\n};\n_s(Posts, \"QxE+tWl2gxovz9/9w65Y9j+hOtw=\", false, function () {\n  return [useSelector, useStyles];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useSelector","Post","useStyles","Grid","CircularProgress","Posts","setCurrentId","posts","isLoading","state","classes","length","circular","container","map","post","_id"],"sources":["D:/mern/mern/client/src/component/Posts/Posts.js"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Post from \"./Post/Post\";\r\nimport useStyles from './styles';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nconst Posts = ({setCurrentId}) => {\r\nconst {posts , isLoading} = useSelector((state) => state.posts);\r\nconst classes = useStyles();\r\n\r\n\r\nif (!posts.length && !isLoading) return 'No posts';\r\n\r\n    return (\r\n        isLoading ? <CircularProgress className={classes.circular} /> : (\r\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n                {posts.map((post) => (\r\n                    <Grid key={post._id} item xs={12} sm={12} md={6} lg={3}>\r\n                        <Post post={post} setCurrentId={setCurrentId}/>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n    ))};\r\n\r\nexport default Posts;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,SAAS,MAAM,UAAU;AAChC,SAAQC,IAAI,QAAO,mBAAmB;AACtC,SAAQC,gBAAgB,QAAO,mBAAmB;AAAC;AAEnD,MAAMC,KAAK,GAAG,QAAoB;EAAA;EAAA,IAAnB;IAACC;EAAY,CAAC;EAC7B,MAAM;IAACC,KAAK;IAAGC;EAAS,CAAC,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACF,KAAK,CAAC;EAC/D,MAAMG,OAAO,GAAGR,SAAS,EAAE;EAG3B,IAAI,CAACK,KAAK,CAACI,MAAM,IAAI,CAACH,SAAS,EAAE,OAAO,UAAU;EAE9C,OACIA,SAAS,gBAAG,QAAC,gBAAgB;IAAC,SAAS,EAAEE,OAAO,CAACE;EAAS;IAAA;IAAA;IAAA;EAAA,QAAG,gBACzD,QAAC,IAAI;IAAC,SAAS,EAAEF,OAAO,CAACG,SAAU;IAAC,SAAS;IAAC,UAAU,EAAC,SAAS;IAAC,OAAO,EAAE,CAAE;IAAA,UACzEN,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACZ,QAAC,IAAI;MAAgB,IAAI;MAAC,EAAE,EAAE,EAAG;MAAC,EAAE,EAAE,EAAG;MAAC,EAAE,EAAE,CAAE;MAAC,EAAE,EAAE,CAAE;MAAA,uBACnD,QAAC,IAAI;QAAC,IAAI,EAAEA,IAAK;QAAC,YAAY,EAAET;MAAa;QAAA;QAAA;QAAA;MAAA;IAAE,GADxCS,IAAI,CAACC,GAAG;MAAA;MAAA;MAAA;IAAA,QAGtB;EAAC;IAAA;IAAA;IAAA;EAAA,QAEb;AAAC,CAAC;AAAC,GAhBFX,KAAK;EAAA,QACiBL,WAAW,EACvBE,SAAS;AAAA;AAAA,KAFnBG,KAAK;AAkBX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}